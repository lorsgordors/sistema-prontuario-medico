// Script para migrar dados existentes para formato criptografado
require('dotenv').config();
const { fetchJsonFromGithub, saveJsonToGithub, listFilesFromGithub } = require('./github-db');
const { encryptPatientData, encryptUserData } = require('./crypto-utils');

async function migrarDados() {
    console.log('üîê Iniciando migra√ß√£o de dados para formato criptografado...\n');
    
    try {
        // 1. Migrar usu√°rios
        console.log('üë• Migrando usu√°rios...');
        const usuarios = await fetchJsonFromGithub('usuarios.json');
        
        // Verificar se j√° est√£o criptografados (se numeroRegistro n√£o parece ser um CPF comum)
        const jaCriptografado = usuarios.some(u => 
            u.numeroRegistro && 
            u.numeroRegistro.length > 20 && // Dados criptografados s√£o muito maiores
            !u.numeroRegistro.includes('-') // CPF tem h√≠fen
        );
        
        if (!jaCriptografado) {
            const usuariosCriptografados = usuarios.map(encryptUserData);
            await saveJsonToGithub('usuarios.json', usuariosCriptografados, 'Migra√ß√£o: Criptografia de dados de usu√°rios');
            console.log(`‚úÖ ${usuarios.length} usu√°rio(s) criptografado(s)`);
        } else {
            console.log('‚úÖ Usu√°rios j√° est√£o criptografados');
        }
        
        // 2. Migrar pacientes
        console.log('\nüè• Migrando pacientes...');
        const files = await listFilesFromGithub('pacientes');
        let pacientesMigrados = 0;
        
        for (const file of files) {
            const paciente = await fetchJsonFromGithub(`pacientes/${file.name}`);
            
            // Verificar se j√° est√° criptografado
            const jaPacienteCriptografado = paciente.cpf && 
                paciente.cpf.length > 20 && 
                !paciente.cpf.includes('-');
            
            if (!jaPacienteCriptografado && paciente.cpf) {
                const pacienteCriptografado = encryptPatientData(paciente);
                await saveJsonToGithub(`pacientes/${file.name}`, pacienteCriptografado, 'Migra√ß√£o: Criptografia de dados do paciente');
                pacientesMigrados++;
                console.log(`‚úÖ Paciente ${paciente.nomeCompleto} criptografado`);
            }
        }
        
        if (pacientesMigrados === 0) {
            console.log('‚úÖ Todos os pacientes j√° est√£o criptografados');
        } else {
            console.log(`‚úÖ ${pacientesMigrados} paciente(s) criptografado(s)`);
        }
        
        console.log('\nüéâ Migra√ß√£o conclu√≠da com sucesso!');
        console.log('\nüîí DADOS AGORA PROTEGIDOS:');
        console.log('  ‚Ä¢ CPF dos pacientes');
        console.log('  ‚Ä¢ Telefones');
        console.log('  ‚Ä¢ Emails'); 
        console.log('  ‚Ä¢ Endere√ßos');
        console.log('  ‚Ä¢ Observa√ß√µes m√©dicas');
        console.log('  ‚Ä¢ Hist√≥rico m√©dico');
        console.log('  ‚Ä¢ N√∫meros de registro dos profissionais');
        
    } catch (error) {
        console.error('‚ùå Erro na migra√ß√£o:', error);
        process.exit(1);
    }
}

// Executar migra√ß√£o
migrarDados();
